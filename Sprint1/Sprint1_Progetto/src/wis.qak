System wis

// WIS
Dispatch start_robot : start_robot(X)

// OPROBOT
Dispatch waiting : waiting(X)

// WASTE STORAGE
Dispatch waste_in : waste_in(X)
Dispatch waste_qty : waste_qty(X)
Dispatch get_waste : get_waste(X)

// INCINERATOR
Dispatch turn_on : turn_on(X)
Dispatch burn_in : burn_in(X)
Dispatch burn_start : burn_start(X)
Dispatch burn_end : burn_end(X)
Dispatch get_ash : get_ash(X)

// ASH STORAGE
Dispatch deposit_ash : deposit_ash(X)
Request empty_ash : empty_ash(X)
Reply ashes_taken : ashes_taken(LEVEL) for empty_ash

// BASIC ROBOT
Request moverobot    :  moverobot(TARGETX, TARGETY)
Reply moverobotdone  :  moverobotok(ARG)
Reply moverobotfailed:  moverobotfailed(PLANDONE, PLANTODO)

Context ctx_wis  ip  [host="localhost" port=8014]
Context ctx_oprobot  ip  [host="127.0.0.1" port=8017]

ExternalQActor op_robot context ctx_wis
ExternalQActor waste_storage context ctx_wis

QActor wis context ctx_wis{
	[#
			var ash_qty = 0
			var waste_qty = 0
			var isBurning: Boolean = false;
			var robot_waiting: Boolean = false;
			var conditions_verified: Boolean = false;
	#]
	State s0 initial{ 
		observeResource waste_storage msgid waste_qty
	}
	Goto idle
	
	State idle {
		println("$name IDLE...")
	}
	
	Transition t0
		whenMsg waiting -> robotWaiting
		whenMsg waste_qty -> updateWasteQty
		whenMsg burn_start -> startBurningPhase
		whenMsg burn_end -> endBurningPhase
		
	State robotWaiting{
		[# robot_waiting = true #]
	}
	
	Goto verifyConditions
	
	State updateWasteQty{
		onMsg(waste_qty:waste_qty(N)){
			[# waste_qty = payloadArg(0).toInt()/50 #]
		}
	}
	
	Goto verifyConditions
		
	State startBurningPhase{
		[# isBurning = true #]
	}
	
	Transition t0
		whenMsg waiting -> robotWaiting
		whenMsg waste_qty -> updateWasteQty
		whenMsg burn_start -> startBurningPhase
		whenMsg burn_end -> endBurningPhase
		
	State endBurningPhase{
		[# isBurning = false #]
	}
	
	Goto verifyConditions
	
	State verifyConditions{
		if [# robotWaiting && !isBurning && waste_qty > 0 #]{
			
			forward  op_robot -m start_robot:start_robot(1)		
			[# robotWaiting = false #]
		}
	}
	
	Transition t0
		whenMsg waiting -> robotWaiting
		whenMsg waste_qty -> updateWasteQty
		whenMsg burn_start -> startBurningPhase
		whenMsg burn_end -> endBurningPhase
	
}